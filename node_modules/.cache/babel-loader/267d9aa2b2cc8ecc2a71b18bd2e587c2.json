{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/Documents/Web_projects/ColtSteelReactJS/yahtzee-starter/src/Game.js\";\nimport React, { Component } from \"react\";\nimport Dice from \"./Dice\";\nimport ScoreTable from \"./ScoreTable\";\nimport \"./Game.css\";\nconst NUM_DICE = 5;\nconst NUM_ROLLS = 3;\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n\n    this.doTotal = () => {\n      let arr = Object.keys(this.state.scores).map(i => {\n        return this.state.scores[i];\n      });\n      let sum = 0;\n\n      for (let i = 0; i < arr.length; i++) {\n        if (arr[i] >= 0) {\n          sum += arr[i];\n        }\n      }\n\n      console.log(arr.sum());\n      this.setState({\n        score: sum\n      });\n    };\n\n    this.toggleLocked = idx => {\n      // toggle whether idx is in locked or not\n      this.setState(st => ({\n        locked: [...st.locked.slice(0, idx), !st.locked[idx], ...st.locked.slice(idx + 1)]\n      }));\n    };\n\n    this.state = {\n      dice: Array.from({\n        length: NUM_DICE\n      }),\n      locked: Array(NUM_DICE).fill(false),\n      rollsLeft: NUM_ROLLS,\n      scores: {\n        ones: undefined,\n        twos: undefined,\n        threes: undefined,\n        fours: undefined,\n        fives: undefined,\n        sixes: undefined,\n        threeOfKind: undefined,\n        fourOfKind: undefined,\n        fullHouse: undefined,\n        smallStraight: undefined,\n        largeStraight: undefined,\n        yahtzee: undefined,\n        chance: undefined\n      },\n      score: 0\n    };\n    this.roll = this.roll.bind(this);\n    this.doScore = this.doScore.bind(this);\n  }\n\n  roll(evt) {\n    // roll dice whose indexes are in reroll\n    this.setState(st => ({\n      dice: st.dice.map((d, i) => st.locked[i] ? d : Math.ceil(Math.random() * 6)),\n      locked: st.rollsLeft > 1 ? st.locked : Array(NUM_DICE).fill(true),\n      rollsLeft: st.rollsLeft - 1\n    }));\n  }\n\n  doScore(rulename, ruleFn) {\n    // evaluate this ruleFn with the dice and score this rulename\n    this.setState(st => ({\n      scores: { ...st.scores,\n        [rulename]: ruleFn(this.state.dice)\n      },\n      rollsLeft: NUM_ROLLS,\n      locked: Array(NUM_DICE).fill(false)\n    }));\n    this.doTotal();\n    this.roll();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"Game-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"App-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Yahtzee!\"), React.createElement(\"section\", {\n      className: \"Game-dice-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Dice, {\n      dice: this.state.dice,\n      locked: this.state.locked,\n      handleClick: this.toggleLocked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Game-button-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"Game-reroll\",\n      disabled: this.state.locked.every(x => x),\n      onClick: this.roll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.state.rollsLeft, \" Rerolls Left\")))), React.createElement(ScoreTable, {\n      doScore: this.doScore,\n      scores: this.state.scores,\n      score: this.state.score,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/nikita/Documents/Web_projects/ColtSteelReactJS/yahtzee-starter/src/Game.js"],"names":["React","Component","Dice","ScoreTable","NUM_DICE","NUM_ROLLS","Game","constructor","props","doTotal","arr","Object","keys","state","scores","map","i","sum","length","console","log","setState","score","toggleLocked","idx","st","locked","slice","dice","Array","from","fill","rollsLeft","ones","undefined","twos","threes","fours","fives","sixes","threeOfKind","fourOfKind","fullHouse","smallStraight","largeStraight","yahtzee","chance","roll","bind","doScore","evt","d","Math","ceil","random","rulename","ruleFn","render","every","x"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Dice from \"./Dice\";\nimport ScoreTable from \"./ScoreTable\";\nimport \"./Game.css\";\n\nconst NUM_DICE = 5;\nconst NUM_ROLLS = 3;\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dice: Array.from({ length: NUM_DICE }),\n      locked: Array(NUM_DICE).fill(false),\n      rollsLeft: NUM_ROLLS,\n      scores: {\n        ones: undefined,\n        twos: undefined,\n        threes: undefined,\n        fours: undefined,\n        fives: undefined,\n        sixes: undefined,\n        threeOfKind: undefined,\n        fourOfKind: undefined,\n        fullHouse: undefined,\n        smallStraight: undefined,\n        largeStraight: undefined,\n        yahtzee: undefined,\n        chance: undefined\n      },\n      score: 0\n    };\n    this.roll = this.roll.bind(this);\n    this.doScore = this.doScore.bind(this);\n  }\n\n  roll(evt) {\n    // roll dice whose indexes are in reroll\n    this.setState(st => ({\n      dice: st.dice.map((d, i) =>\n        st.locked[i] ? d : Math.ceil(Math.random() * 6)\n      ),\n      locked: st.rollsLeft > 1 ? st.locked : Array(NUM_DICE).fill(true),\n      rollsLeft: st.rollsLeft - 1\n    }));\n  }\n\n  doTotal = () => {\n    let arr = Object.keys(this.state.scores).map(i => {\n      return this.state.scores[i];\n    });\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i] >= 0) {\n        sum += arr[i];\n      }\n    }\n    console.log(arr.sum());\n\n    this.setState({ score: sum });\n  };\n\n  toggleLocked = idx => {\n    // toggle whether idx is in locked or not\n    this.setState(st => ({\n      locked: [\n        ...st.locked.slice(0, idx),\n        !st.locked[idx],\n        ...st.locked.slice(idx + 1)\n      ]\n    }));\n  };\n\n  doScore(rulename, ruleFn) {\n    // evaluate this ruleFn with the dice and score this rulename\n    this.setState(st => ({\n      scores: { ...st.scores, [rulename]: ruleFn(this.state.dice) },\n      rollsLeft: NUM_ROLLS,\n      locked: Array(NUM_DICE).fill(false)\n    }));\n    this.doTotal();\n    this.roll();\n  }\n\n  render() {\n    return (\n      <div className=\"Game\">\n        <header className=\"Game-header\">\n          <h1 className=\"App-title\">Yahtzee!</h1>\n\n          <section className=\"Game-dice-section\">\n            <Dice\n              dice={this.state.dice}\n              locked={this.state.locked}\n              handleClick={this.toggleLocked}\n            />\n            <div className=\"Game-button-wrapper\">\n              <button\n                className=\"Game-reroll\"\n                disabled={this.state.locked.every(x => x)}\n                onClick={this.roll}\n              >\n                {this.state.rollsLeft} Rerolls Left\n              </button>\n            </div>\n          </section>\n        </header>\n        <ScoreTable\n          doScore={this.doScore}\n          scores={this.state.scores}\n          score={this.state.score}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}