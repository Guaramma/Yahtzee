{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/Documents/Web_projects/ColtSteelReactJS/yahtzee-starter/src/Game.js\";\nimport React, { Component } from \"react\";\nimport Dice from \"./Dice\";\nimport ScoreTable from \"./ScoreTable\";\nimport \"./Game.css\";\nconst NUM_DICE = 5;\nconst NUM_ROLLS = 3;\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n\n    this.rolling = () => {\n      let rolling = () => this.setState({\n        rolling: false\n      });\n\n      setTimeout(rolling, 1000);\n    };\n\n    this.toggleLocked = idx => {\n      // toggle whether idx is in locked or not\n      this.setState(st => ({\n        locked: [...st.locked.slice(0, idx), !st.locked[idx], ...st.locked.slice(idx + 1)]\n      }));\n    };\n\n    this.state = {\n      dice: Array.from({\n        length: NUM_DICE\n      }),\n      locked: Array(NUM_DICE).fill(false),\n      rollsLeft: NUM_ROLLS,\n      rolling: false,\n      scores: {\n        ones: undefined,\n        twos: undefined,\n        threes: undefined,\n        fours: undefined,\n        fives: undefined,\n        sixes: undefined,\n        threeOfKind: undefined,\n        fourOfKind: undefined,\n        fullHouse: undefined,\n        smallStraight: undefined,\n        largeStraight: undefined,\n        yahtzee: undefined,\n        chance: undefined\n      },\n      score: 0\n    };\n    this.roll = this.roll.bind(this);\n    this.doScore = this.doScore.bind(this);\n  }\n\n  componentDidMount() {\n    this.roll();\n  }\n\n  roll(evt) {\n    this.setState({\n      rolling: true\n    }); // roll dice whose indexes are in reroll\n\n    setTimeout(this.setState(st => ({\n      dice: st.dice.map((d, i) => st.locked[i] ? d : Math.ceil(Math.random() * 6)),\n      locked: st.rollsLeft > 1 ? st.locked : Array(NUM_DICE).fill(true),\n      rollsLeft: st.rollsLeft - 1,\n      rolling: false\n    })), 1000);\n    this.rolling();\n  }\n\n  doScore(rulename, ruleFn) {\n    // evaluate this ruleFn with the dice and score this rulename\n    this.setState(st => ({\n      scores: { ...st.scores,\n        [rulename]: ruleFn(this.state.dice)\n      },\n      rollsLeft: NUM_ROLLS,\n      locked: Array(NUM_DICE).fill(false),\n      score: st.score + ruleFn(this.state.dice)\n    }));\n    this.roll();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"Game-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"App-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Yahtzee!\"), React.createElement(\"section\", {\n      className: \"Game-dice-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Dice, {\n      dice: this.state.dice,\n      locked: this.state.locked,\n      handleClick: this.toggleLocked,\n      rollsLeft: this.state.rollsLeft,\n      rolling: this.state.rolling,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Game-button-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"Game-reroll\",\n      disabled: this.state.locked.every(x => x) || this.state.rollsLeft === 0 || this.state.rolling === true,\n      onClick: this.roll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.state.rollsLeft, \" Rerolls Left\")))), React.createElement(ScoreTable, {\n      doScore: this.doScore,\n      scores: this.state.scores,\n      score: this.state.score,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/nikita/Documents/Web_projects/ColtSteelReactJS/yahtzee-starter/src/Game.js"],"names":["React","Component","Dice","ScoreTable","NUM_DICE","NUM_ROLLS","Game","constructor","props","rolling","setState","setTimeout","toggleLocked","idx","st","locked","slice","state","dice","Array","from","length","fill","rollsLeft","scores","ones","undefined","twos","threes","fours","fives","sixes","threeOfKind","fourOfKind","fullHouse","smallStraight","largeStraight","yahtzee","chance","score","roll","bind","doScore","componentDidMount","evt","map","d","i","Math","ceil","random","rulename","ruleFn","render","every","x"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Dice from \"./Dice\";\nimport ScoreTable from \"./ScoreTable\";\nimport \"./Game.css\";\n\nconst NUM_DICE = 5;\nconst NUM_ROLLS = 3;\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dice: Array.from({ length: NUM_DICE }),\n      locked: Array(NUM_DICE).fill(false),\n      rollsLeft: NUM_ROLLS,\n      rolling: false,\n      scores: {\n        ones: undefined,\n        twos: undefined,\n        threes: undefined,\n        fours: undefined,\n        fives: undefined,\n        sixes: undefined,\n        threeOfKind: undefined,\n        fourOfKind: undefined,\n        fullHouse: undefined,\n        smallStraight: undefined,\n        largeStraight: undefined,\n        yahtzee: undefined,\n        chance: undefined\n      },\n      score: 0\n    };\n    this.roll = this.roll.bind(this);\n    this.doScore = this.doScore.bind(this);\n  }\n\n  componentDidMount() {\n    this.roll();\n  }\n\n  roll(evt) {\n    this.setState({ rolling: true });\n    // roll dice whose indexes are in reroll\n    setTimeout(\n      this.setState(st => ({\n        dice: st.dice.map((d, i) =>\n          st.locked[i] ? d : Math.ceil(Math.random() * 6)\n        ),\n        locked: st.rollsLeft > 1 ? st.locked : Array(NUM_DICE).fill(true),\n        rollsLeft: st.rollsLeft - 1,\n        rolling: false\n      })),\n      1000\n    );\n    this.rolling();\n  }\n\n  rolling = () => {\n    let rolling = () => this.setState({ rolling: false });\n    setTimeout(rolling, 1000);\n  };\n\n  toggleLocked = idx => {\n    // toggle whether idx is in locked or not\n    this.setState(st => ({\n      locked: [\n        ...st.locked.slice(0, idx),\n        !st.locked[idx],\n        ...st.locked.slice(idx + 1)\n      ]\n    }));\n  };\n\n  doScore(rulename, ruleFn) {\n    // evaluate this ruleFn with the dice and score this rulename\n    this.setState(st => ({\n      scores: { ...st.scores, [rulename]: ruleFn(this.state.dice) },\n      rollsLeft: NUM_ROLLS,\n      locked: Array(NUM_DICE).fill(false),\n      score: st.score + ruleFn(this.state.dice)\n    }));\n    this.roll();\n  }\n\n  render() {\n    return (\n      <div className=\"Game\">\n        <header className=\"Game-header\">\n          <h1 className=\"App-title\">Yahtzee!</h1>\n\n          <section className=\"Game-dice-section\">\n            <Dice\n              dice={this.state.dice}\n              locked={this.state.locked}\n              handleClick={this.toggleLocked}\n              rollsLeft={this.state.rollsLeft}\n              rolling={this.state.rolling}\n            />\n            <div className=\"Game-button-wrapper\">\n              <button\n                className=\"Game-reroll\"\n                disabled={\n                  this.state.locked.every(x => x) ||\n                  this.state.rollsLeft === 0 ||\n                  this.state.rolling === true\n                }\n                onClick={this.roll}\n              >\n                {this.state.rollsLeft} Rerolls Left\n              </button>\n            </div>\n          </section>\n        </header>\n        <ScoreTable\n          doScore={this.doScore}\n          scores={this.state.scores}\n          score={this.state.score}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}