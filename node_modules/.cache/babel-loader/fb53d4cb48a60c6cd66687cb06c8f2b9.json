{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/Documents/Web_projects/ColtSteelReactJS/yahtzee-starter/src/Game.js\";\nimport React, { Component } from \"react\";\nimport Dice from \"./Dice\";\nimport ScoreTable from \"./ScoreTable\";\nimport \"./Game.css\";\nconst NUM_DICE = 5;\nconst NUM_ROLLS = 3;\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleLocked = idx => {\n      console.log(idx, this.state.locked.splice(0, idx), this.state.locked.slice(idx), this.state.locked.slice(idx + 1)); // toggle whether idx is in locked or not\n\n      this.setState(st => ({\n        locked: [...st.locked.slice(0, idx), !st.locked[idx], ...st.locked.slice(idx + 1)]\n      }));\n    };\n\n    this.state = {\n      dice: Array.from({\n        length: NUM_DICE\n      }),\n      locked: Array(NUM_DICE).fill(false),\n      rollsLeft: NUM_ROLLS,\n      scores: {\n        ones: undefined,\n        twos: undefined,\n        threes: undefined,\n        fours: undefined,\n        fives: undefined,\n        sixes: undefined,\n        threeOfKind: undefined,\n        fourOfKind: undefined,\n        fullHouse: undefined,\n        smallStraight: undefined,\n        largeStraight: undefined,\n        yahtzee: undefined,\n        chance: undefined\n      },\n      score: 0\n    };\n    this.roll = this.roll.bind(this);\n    this.doScore = this.doScore.bind(this);\n  }\n\n  roll(evt) {\n    // roll dice whose indexes are in reroll\n    this.setState(st => ({\n      dice: st.dice.map((d, i) => st.locked[i] ? d : Math.ceil(Math.random() * 6)),\n      locked: st.rollsLeft > 1 ? st.locked : Array(NUM_DICE).fill(true),\n      rollsLeft: st.rollsLeft - 1\n    }));\n  } // doTotal = () => {\n  //   let arr = Object.keys(this.state.scores).map(i => {\n  //     return this.state.scores[i];\n  //   });\n  //   let sum = 0;\n  //   for (let i = 0; i < arr.length; i++) {\n  //     if (arr[i] >= 0) {\n  //       sum += arr[i];\n  //     }\n  //   }\n  //   this.setState({ score: sum });\n  // };\n\n\n  doScore(rulename, ruleFn) {\n    // evaluate this ruleFn with the dice and score this rulename\n    this.setState(st => ({\n      scores: { ...st.scores,\n        [rulename]: ruleFn(this.state.dice)\n      },\n      rollsLeft: NUM_ROLLS,\n      locked: Array(NUM_DICE).fill(false),\n      score: st.score + ruleFn(this.state.dice)\n    })); // this.doTotal();\n\n    this.roll();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"Game-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"App-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Yahtzee!\"), React.createElement(\"section\", {\n      className: \"Game-dice-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Dice, {\n      dice: this.state.dice,\n      locked: this.state.locked,\n      handleClick: this.toggleLocked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Game-button-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"Game-reroll\",\n      disabled: this.state.locked.every(x => x),\n      onClick: this.roll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.state.rollsLeft, \" Rerolls Left\")))), React.createElement(ScoreTable, {\n      doScore: this.doScore,\n      scores: this.state.scores,\n      score: this.state.score,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/nikita/Documents/Web_projects/ColtSteelReactJS/yahtzee-starter/src/Game.js"],"names":["React","Component","Dice","ScoreTable","NUM_DICE","NUM_ROLLS","Game","constructor","props","toggleLocked","idx","console","log","state","locked","splice","slice","setState","st","dice","Array","from","length","fill","rollsLeft","scores","ones","undefined","twos","threes","fours","fives","sixes","threeOfKind","fourOfKind","fullHouse","smallStraight","largeStraight","yahtzee","chance","score","roll","bind","doScore","evt","map","d","i","Math","ceil","random","rulename","ruleFn","render","every","x"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Dice from \"./Dice\";\nimport ScoreTable from \"./ScoreTable\";\nimport \"./Game.css\";\n\nconst NUM_DICE = 5;\nconst NUM_ROLLS = 3;\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dice: Array.from({ length: NUM_DICE }),\n      locked: Array(NUM_DICE).fill(false),\n      rollsLeft: NUM_ROLLS,\n      scores: {\n        ones: undefined,\n        twos: undefined,\n        threes: undefined,\n        fours: undefined,\n        fives: undefined,\n        sixes: undefined,\n        threeOfKind: undefined,\n        fourOfKind: undefined,\n        fullHouse: undefined,\n        smallStraight: undefined,\n        largeStraight: undefined,\n        yahtzee: undefined,\n        chance: undefined\n      },\n      score: 0\n    };\n    this.roll = this.roll.bind(this);\n    this.doScore = this.doScore.bind(this);\n  }\n\n  roll(evt) {\n    // roll dice whose indexes are in reroll\n    this.setState(st => ({\n      dice: st.dice.map((d, i) =>\n        st.locked[i] ? d : Math.ceil(Math.random() * 6)\n      ),\n      locked: st.rollsLeft > 1 ? st.locked : Array(NUM_DICE).fill(true),\n      rollsLeft: st.rollsLeft - 1\n    }));\n  }\n\n  // doTotal = () => {\n  //   let arr = Object.keys(this.state.scores).map(i => {\n  //     return this.state.scores[i];\n  //   });\n  //   let sum = 0;\n  //   for (let i = 0; i < arr.length; i++) {\n  //     if (arr[i] >= 0) {\n  //       sum += arr[i];\n  //     }\n  //   }\n  //   this.setState({ score: sum });\n  // };\n\n  toggleLocked = idx => {\n    console.log(\n      idx,\n      this.state.locked.splice(0, idx),\n      this.state.locked.slice(idx),\n      this.state.locked.slice(idx + 1)\n    );\n\n    // toggle whether idx is in locked or not\n    this.setState(st => ({\n      locked: [\n        ...st.locked.slice(0, idx),\n        !st.locked[idx],\n        ...st.locked.slice(idx + 1)\n      ]\n    }));\n  };\n\n  doScore(rulename, ruleFn) {\n    // evaluate this ruleFn with the dice and score this rulename\n    this.setState(st => ({\n      scores: { ...st.scores, [rulename]: ruleFn(this.state.dice) },\n      rollsLeft: NUM_ROLLS,\n      locked: Array(NUM_DICE).fill(false),\n      score: st.score + ruleFn(this.state.dice)\n    }));\n    // this.doTotal();\n    this.roll();\n  }\n\n  render() {\n    return (\n      <div className=\"Game\">\n        <header className=\"Game-header\">\n          <h1 className=\"App-title\">Yahtzee!</h1>\n\n          <section className=\"Game-dice-section\">\n            <Dice\n              dice={this.state.dice}\n              locked={this.state.locked}\n              handleClick={this.toggleLocked}\n            />\n            <div className=\"Game-button-wrapper\">\n              <button\n                className=\"Game-reroll\"\n                disabled={this.state.locked.every(x => x)}\n                onClick={this.roll}\n              >\n                {this.state.rollsLeft} Rerolls Left\n              </button>\n            </div>\n          </section>\n        </header>\n        <ScoreTable\n          doScore={this.doScore}\n          scores={this.state.scores}\n          score={this.state.score}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}